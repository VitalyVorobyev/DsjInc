//
// File generated by rootcint at Sun Sep 16 14:12:44 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dsjinc_evt_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dsjinc_evt_dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void dsjinc_evt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dsjinc_evt(void *p = 0);
   static void *newArray_dsjinc_evt(Long_t size, void *p);
   static void delete_dsjinc_evt(void *p);
   static void deleteArray_dsjinc_evt(void *p);
   static void destruct_dsjinc_evt(void *p);
   static void streamer_dsjinc_evt(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dsjinc_evt*)
   {
      ::dsjinc_evt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dsjinc_evt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dsjinc_evt", ::dsjinc_evt::Class_Version(), "./dsjinc_evt.h", 7,
                  typeid(::dsjinc_evt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dsjinc_evt::Dictionary, isa_proxy, 0,
                  sizeof(::dsjinc_evt) );
      instance.SetNew(&new_dsjinc_evt);
      instance.SetNewArray(&newArray_dsjinc_evt);
      instance.SetDelete(&delete_dsjinc_evt);
      instance.SetDeleteArray(&deleteArray_dsjinc_evt);
      instance.SetDestructor(&destruct_dsjinc_evt);
      instance.SetStreamerFunc(&streamer_dsjinc_evt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dsjinc_evt*)
   {
      return GenerateInitInstanceLocal((::dsjinc_evt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dsjinc_evt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dsjinc_mcevt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dsjinc_mcevt(void *p = 0);
   static void *newArray_dsjinc_mcevt(Long_t size, void *p);
   static void delete_dsjinc_mcevt(void *p);
   static void deleteArray_dsjinc_mcevt(void *p);
   static void destruct_dsjinc_mcevt(void *p);
   static void streamer_dsjinc_mcevt(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dsjinc_mcevt*)
   {
      ::dsjinc_mcevt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dsjinc_mcevt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dsjinc_mcevt", ::dsjinc_mcevt::Class_Version(), "./dsjinc_mcevt.h", 7,
                  typeid(::dsjinc_mcevt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dsjinc_mcevt::Dictionary, isa_proxy, 0,
                  sizeof(::dsjinc_mcevt) );
      instance.SetNew(&new_dsjinc_mcevt);
      instance.SetNewArray(&newArray_dsjinc_mcevt);
      instance.SetDelete(&delete_dsjinc_mcevt);
      instance.SetDeleteArray(&deleteArray_dsjinc_mcevt);
      instance.SetDestructor(&destruct_dsjinc_mcevt);
      instance.SetStreamerFunc(&streamer_dsjinc_mcevt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dsjinc_mcevt*)
   {
      return GenerateInitInstanceLocal((::dsjinc_mcevt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dsjinc_mcevt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ds_evt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ds_evt(void *p = 0);
   static void *newArray_ds_evt(Long_t size, void *p);
   static void delete_ds_evt(void *p);
   static void deleteArray_ds_evt(void *p);
   static void destruct_ds_evt(void *p);
   static void streamer_ds_evt(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ds_evt*)
   {
      ::ds_evt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ds_evt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ds_evt", ::ds_evt::Class_Version(), "./ds_evt.h", 7,
                  typeid(::ds_evt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ds_evt::Dictionary, isa_proxy, 0,
                  sizeof(::ds_evt) );
      instance.SetNew(&new_ds_evt);
      instance.SetNewArray(&newArray_ds_evt);
      instance.SetDelete(&delete_ds_evt);
      instance.SetDeleteArray(&deleteArray_ds_evt);
      instance.SetDestructor(&destruct_ds_evt);
      instance.SetStreamerFunc(&streamer_ds_evt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ds_evt*)
   {
      return GenerateInitInstanceLocal((::ds_evt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ds_evt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ds_mcevt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ds_mcevt(void *p = 0);
   static void *newArray_ds_mcevt(Long_t size, void *p);
   static void delete_ds_mcevt(void *p);
   static void deleteArray_ds_mcevt(void *p);
   static void destruct_ds_mcevt(void *p);
   static void streamer_ds_mcevt(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ds_mcevt*)
   {
      ::ds_mcevt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ds_mcevt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ds_mcevt", ::ds_mcevt::Class_Version(), "./ds_mcevt.h", 7,
                  typeid(::ds_mcevt), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ds_mcevt::Dictionary, isa_proxy, 0,
                  sizeof(::ds_mcevt) );
      instance.SetNew(&new_ds_mcevt);
      instance.SetNewArray(&newArray_ds_mcevt);
      instance.SetDelete(&delete_ds_mcevt);
      instance.SetDeleteArray(&deleteArray_ds_mcevt);
      instance.SetDestructor(&destruct_ds_mcevt);
      instance.SetStreamerFunc(&streamer_ds_mcevt);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ds_mcevt*)
   {
      return GenerateInitInstanceLocal((::ds_mcevt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ds_mcevt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr dsjinc_evt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *dsjinc_evt::Class_Name()
{
   return "dsjinc_evt";
}

//______________________________________________________________________________
const char *dsjinc_evt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dsjinc_evt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int dsjinc_evt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dsjinc_evt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void dsjinc_evt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dsjinc_evt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *dsjinc_evt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dsjinc_evt*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr dsjinc_mcevt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *dsjinc_mcevt::Class_Name()
{
   return "dsjinc_mcevt";
}

//______________________________________________________________________________
const char *dsjinc_mcevt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dsjinc_mcevt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int dsjinc_mcevt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dsjinc_mcevt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void dsjinc_mcevt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dsjinc_mcevt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *dsjinc_mcevt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dsjinc_mcevt*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ds_evt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ds_evt::Class_Name()
{
   return "ds_evt";
}

//______________________________________________________________________________
const char *ds_evt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ds_evt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ds_evt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ds_evt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ds_evt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ds_evt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ds_evt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ds_evt*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ds_mcevt::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ds_mcevt::Class_Name()
{
   return "ds_mcevt";
}

//______________________________________________________________________________
const char *ds_mcevt::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ds_mcevt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ds_mcevt::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ds_mcevt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ds_mcevt::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ds_mcevt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ds_mcevt::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ds_mcevt*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void dsjinc_evt::Streamer(TBuffer &R__b)
{
   // Stream an object of class dsjinc_evt.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      info.Streamer(R__b);
      R__b >> mode_ds;
      R__b >> mode;
      R__b >> flv;
      R__b >> m;
      R__b >> mds;
      R__b >> dmdsst;
      R__b >> mvec;
      R__b >> cos_hel_dsj;
      R__b >> cos_hel_vec;
      gam_dsj.Streamer(R__b);
      gam_dsst.Streamer(R__b);
      pi0_dsj.Streamer(R__b);
      pi_dst.Streamer(R__b);
      pip_dsj.Streamer(R__b);
      pim_dsj.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, dsjinc_evt::IsA());
   } else {
      R__c = R__b.WriteVersion(dsjinc_evt::IsA(), kTRUE);
      TObject::Streamer(R__b);
      info.Streamer(R__b);
      R__b << mode_ds;
      R__b << mode;
      R__b << flv;
      R__b << m;
      R__b << mds;
      R__b << dmdsst;
      R__b << mvec;
      R__b << cos_hel_dsj;
      R__b << cos_hel_vec;
      gam_dsj.Streamer(R__b);
      gam_dsst.Streamer(R__b);
      pi0_dsj.Streamer(R__b);
      pi_dst.Streamer(R__b);
      pip_dsj.Streamer(R__b);
      pim_dsj.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void dsjinc_evt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dsjinc_evt.
      TClass *R__cl = ::dsjinc_evt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode_ds", &mode_ds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode", &mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flv", &flv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mds", &mds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dmdsst", &dmdsst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvec", &mvec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_hel_dsj", &cos_hel_dsj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_hel_vec", &cos_hel_vec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gam_dsj", &gam_dsj);
      R__insp.InspectMember(gam_dsj, "gam_dsj.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gam_dsst", &gam_dsst);
      R__insp.InspectMember(gam_dsst, "gam_dsst.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pi0_dsj", &pi0_dsj);
      R__insp.InspectMember(pi0_dsj, "pi0_dsj.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pi_dst", &pi_dst);
      R__insp.InspectMember(pi_dst, "pi_dst.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pip_dsj", &pip_dsj);
      R__insp.InspectMember(pip_dsj, "pip_dsj.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pim_dsj", &pim_dsj);
      R__insp.InspectMember(pim_dsj, "pim_dsj.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dsjinc_evt(void *p) {
      return  p ? new(p) ::dsjinc_evt : new ::dsjinc_evt;
   }
   static void *newArray_dsjinc_evt(Long_t nElements, void *p) {
      return p ? new(p) ::dsjinc_evt[nElements] : new ::dsjinc_evt[nElements];
   }
   // Wrapper around operator delete
   static void delete_dsjinc_evt(void *p) {
      delete ((::dsjinc_evt*)p);
   }
   static void deleteArray_dsjinc_evt(void *p) {
      delete [] ((::dsjinc_evt*)p);
   }
   static void destruct_dsjinc_evt(void *p) {
      typedef ::dsjinc_evt current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dsjinc_evt(TBuffer &buf, void *obj) {
      ((::dsjinc_evt*)obj)->::dsjinc_evt::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dsjinc_evt

//______________________________________________________________________________
void dsjinc_mcevt::Streamer(TBuffer &R__b)
{
   // Stream an object of class dsjinc_mcevt.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      dsj_gen.Streamer(R__b);
      ds_gen.Streamer(R__b);
      gam_dsst_gen.Streamer(R__b);
      gam_dsj_gen.Streamer(R__b);
      pi0_dsj_gen.Streamer(R__b);
      pip_dsj_gen.Streamer(R__b);
      pim_dsj_gen.Streamer(R__b);
      h_ds_gen.Streamer(R__b);
      ks_ds_gen.Streamer(R__b);
      h1_vec_gen.Streamer(R__b);
      h2_vec_gen.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, dsjinc_mcevt::IsA());
   } else {
      R__c = R__b.WriteVersion(dsjinc_mcevt::IsA(), kTRUE);
      TObject::Streamer(R__b);
      dsj_gen.Streamer(R__b);
      ds_gen.Streamer(R__b);
      gam_dsst_gen.Streamer(R__b);
      gam_dsj_gen.Streamer(R__b);
      pi0_dsj_gen.Streamer(R__b);
      pip_dsj_gen.Streamer(R__b);
      pim_dsj_gen.Streamer(R__b);
      h_ds_gen.Streamer(R__b);
      ks_ds_gen.Streamer(R__b);
      h1_vec_gen.Streamer(R__b);
      h2_vec_gen.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void dsjinc_mcevt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dsjinc_mcevt.
      TClass *R__cl = ::dsjinc_mcevt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dsj_gen", &dsj_gen);
      R__insp.InspectMember(dsj_gen, "dsj_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ds_gen", &ds_gen);
      R__insp.InspectMember(ds_gen, "ds_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gam_dsst_gen", &gam_dsst_gen);
      R__insp.InspectMember(gam_dsst_gen, "gam_dsst_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gam_dsj_gen", &gam_dsj_gen);
      R__insp.InspectMember(gam_dsj_gen, "gam_dsj_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pi0_dsj_gen", &pi0_dsj_gen);
      R__insp.InspectMember(pi0_dsj_gen, "pi0_dsj_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pip_dsj_gen", &pip_dsj_gen);
      R__insp.InspectMember(pip_dsj_gen, "pip_dsj_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pim_dsj_gen", &pim_dsj_gen);
      R__insp.InspectMember(pim_dsj_gen, "pim_dsj_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h_ds_gen", &h_ds_gen);
      R__insp.InspectMember(h_ds_gen, "h_ds_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ks_ds_gen", &ks_ds_gen);
      R__insp.InspectMember(ks_ds_gen, "ks_ds_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h1_vec_gen", &h1_vec_gen);
      R__insp.InspectMember(h1_vec_gen, "h1_vec_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h2_vec_gen", &h2_vec_gen);
      R__insp.InspectMember(h2_vec_gen, "h2_vec_gen.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dsjinc_mcevt(void *p) {
      return  p ? new(p) ::dsjinc_mcevt : new ::dsjinc_mcevt;
   }
   static void *newArray_dsjinc_mcevt(Long_t nElements, void *p) {
      return p ? new(p) ::dsjinc_mcevt[nElements] : new ::dsjinc_mcevt[nElements];
   }
   // Wrapper around operator delete
   static void delete_dsjinc_mcevt(void *p) {
      delete ((::dsjinc_mcevt*)p);
   }
   static void deleteArray_dsjinc_mcevt(void *p) {
      delete [] ((::dsjinc_mcevt*)p);
   }
   static void destruct_dsjinc_mcevt(void *p) {
      typedef ::dsjinc_mcevt current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dsjinc_mcevt(TBuffer &buf, void *obj) {
      ((::dsjinc_mcevt*)obj)->::dsjinc_mcevt::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dsjinc_mcevt

//______________________________________________________________________________
void ds_evt::Streamer(TBuffer &R__b)
{
   // Stream an object of class ds_evt.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      info.Streamer(R__b);
      R__b >> mode;
      R__b >> flv;
      R__b >> m;
      R__b >> mvec;
      R__b.ReadStaticArray((double*)pvec);
      R__b >> cos_hel_vec;
      h_ds.Streamer(R__b);
      ks_ds.Streamer(R__b);
      h1_vec.Streamer(R__b);
      h2_vec.Streamer(R__b);
      ipbst.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ds_evt::IsA());
   } else {
      R__c = R__b.WriteVersion(ds_evt::IsA(), kTRUE);
      TObject::Streamer(R__b);
      info.Streamer(R__b);
      R__b << mode;
      R__b << flv;
      R__b << m;
      R__b << mvec;
      R__b.WriteArray(pvec, 3);
      R__b << cos_hel_vec;
      h_ds.Streamer(R__b);
      ks_ds.Streamer(R__b);
      h1_vec.Streamer(R__b);
      h2_vec.Streamer(R__b);
      ipbst.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ds_evt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ds_evt.
      TClass *R__cl = ::ds_evt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "info", &info);
      R__insp.InspectMember(info, "info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode", &mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flv", &flv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvec", &mvec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pvec[3]", pvec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_hel_vec", &cos_hel_vec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h_ds", &h_ds);
      R__insp.InspectMember(h_ds, "h_ds.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ks_ds", &ks_ds);
      R__insp.InspectMember(ks_ds, "ks_ds.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h1_vec", &h1_vec);
      R__insp.InspectMember(h1_vec, "h1_vec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h2_vec", &h2_vec);
      R__insp.InspectMember(h2_vec, "h2_vec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ipbst", &ipbst);
      R__insp.InspectMember(ipbst, "ipbst.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ds_evt(void *p) {
      return  p ? new(p) ::ds_evt : new ::ds_evt;
   }
   static void *newArray_ds_evt(Long_t nElements, void *p) {
      return p ? new(p) ::ds_evt[nElements] : new ::ds_evt[nElements];
   }
   // Wrapper around operator delete
   static void delete_ds_evt(void *p) {
      delete ((::ds_evt*)p);
   }
   static void deleteArray_ds_evt(void *p) {
      delete [] ((::ds_evt*)p);
   }
   static void destruct_ds_evt(void *p) {
      typedef ::ds_evt current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ds_evt(TBuffer &buf, void *obj) {
      ((::ds_evt*)obj)->::ds_evt::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ds_evt

//______________________________________________________________________________
void ds_mcevt::Streamer(TBuffer &R__b)
{
   // Stream an object of class ds_mcevt.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      genhep.Streamer(R__b);
      ds_gen.Streamer(R__b);
      h_ds_gen.Streamer(R__b);
      ks_ds_gen.Streamer(R__b);
      h1_vec_gen.Streamer(R__b);
      h2_vec_gen.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ds_mcevt::IsA());
   } else {
      R__c = R__b.WriteVersion(ds_mcevt::IsA(), kTRUE);
      TObject::Streamer(R__b);
      genhep.Streamer(R__b);
      ds_gen.Streamer(R__b);
      h_ds_gen.Streamer(R__b);
      ks_ds_gen.Streamer(R__b);
      h1_vec_gen.Streamer(R__b);
      h2_vec_gen.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ds_mcevt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ds_mcevt.
      TClass *R__cl = ::ds_mcevt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genhep", &genhep);
      R__insp.InspectMember(genhep, "genhep.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ds_gen", &ds_gen);
      R__insp.InspectMember(ds_gen, "ds_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h_ds_gen", &h_ds_gen);
      R__insp.InspectMember(h_ds_gen, "h_ds_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ks_ds_gen", &ks_ds_gen);
      R__insp.InspectMember(ks_ds_gen, "ks_ds_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h1_vec_gen", &h1_vec_gen);
      R__insp.InspectMember(h1_vec_gen, "h1_vec_gen.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h2_vec_gen", &h2_vec_gen);
      R__insp.InspectMember(h2_vec_gen, "h2_vec_gen.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ds_mcevt(void *p) {
      return  p ? new(p) ::ds_mcevt : new ::ds_mcevt;
   }
   static void *newArray_ds_mcevt(Long_t nElements, void *p) {
      return p ? new(p) ::ds_mcevt[nElements] : new ::ds_mcevt[nElements];
   }
   // Wrapper around operator delete
   static void delete_ds_mcevt(void *p) {
      delete ((::ds_mcevt*)p);
   }
   static void deleteArray_ds_mcevt(void *p) {
      delete [] ((::ds_mcevt*)p);
   }
   static void destruct_ds_mcevt(void *p) {
      typedef ::ds_mcevt current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ds_mcevt(TBuffer &buf, void *obj) {
      ((::ds_mcevt*)obj)->::ds_mcevt::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ds_mcevt

/********************************************************
* dsjinc_evt_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledsjinc_evt_dict();

extern "C" void G__set_cpp_environmentdsjinc_evt_dict() {
  G__cpp_reset_tagtabledsjinc_evt_dict();
}
#include <new>
extern "C" int G__cpp_dllrevdsjinc_evt_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* dsjinc_evt */
static int G__dsjinc_evt_dict_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dsjinc_evt* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dsjinc_evt[n];
     } else {
       p = new((void*) gvp) dsjinc_evt[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dsjinc_evt;
     } else {
       p = new((void*) gvp) dsjinc_evt;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dsjinc_evt*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dsjinc_evt*) G__getstructoffset())->DsstFl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dsjinc_evt*) G__getstructoffset())->DsjPi0Fl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dsjinc_evt*) G__getstructoffset())->DsjGammaFl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dsjinc_evt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dsjinc_evt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dsjinc_evt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dsjinc_evt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dsjinc_evt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dsjinc_evt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dsjinc_evt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dsjinc_evt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dsjinc_evt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dsjinc_evt_dict_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dsjinc_evt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dsjinc_evt(*(dsjinc_evt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dsjinc_evt G__Tdsjinc_evt;
static int G__dsjinc_evt_dict_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dsjinc_evt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dsjinc_evt*) (soff+(sizeof(dsjinc_evt)*i)))->~G__Tdsjinc_evt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dsjinc_evt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dsjinc_evt*) (soff))->~G__Tdsjinc_evt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dsjinc_evt_dict_186_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dsjinc_evt* dest = (dsjinc_evt*) G__getstructoffset();
   *dest = *(dsjinc_evt*) libp->para[0].ref;
   const dsjinc_evt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dsjinc_mcevt */
static int G__dsjinc_evt_dict_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dsjinc_mcevt* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dsjinc_mcevt[n];
     } else {
       p = new((void*) gvp) dsjinc_mcevt[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dsjinc_mcevt;
     } else {
       p = new((void*) gvp) dsjinc_mcevt;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dsjinc_mcevt*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dsjinc_mcevt*) G__getstructoffset())->Sig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dsjinc_mcevt*) G__getstructoffset())->Cmb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dsjinc_mcevt*) G__getstructoffset())->Bkg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dsjinc_mcevt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dsjinc_mcevt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dsjinc_mcevt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dsjinc_mcevt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dsjinc_mcevt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dsjinc_mcevt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dsjinc_mcevt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dsjinc_mcevt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_187_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dsjinc_mcevt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dsjinc_evt_dict_187_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dsjinc_mcevt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dsjinc_mcevt(*(dsjinc_mcevt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dsjinc_mcevt G__Tdsjinc_mcevt;
static int G__dsjinc_evt_dict_187_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dsjinc_mcevt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dsjinc_mcevt*) (soff+(sizeof(dsjinc_mcevt)*i)))->~G__Tdsjinc_mcevt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dsjinc_mcevt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dsjinc_mcevt*) (soff))->~G__Tdsjinc_mcevt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dsjinc_evt_dict_187_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dsjinc_mcevt* dest = (dsjinc_mcevt*) G__getstructoffset();
   *dest = *(dsjinc_mcevt*) libp->para[0].ref;
   const dsjinc_mcevt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ds_evt */
static int G__dsjinc_evt_dict_188_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ds_evt* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ds_evt[n];
     } else {
       p = new((void*) gvp) ds_evt[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ds_evt;
     } else {
       p = new((void*) gvp) ds_evt;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ds_evt*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ds_evt*) G__getstructoffset())->Pvec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ds_evt*) G__getstructoffset())->ptvec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ds_evt*) G__getstructoffset())->costhvec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ds_evt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ds_evt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ds_evt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ds_evt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ds_evt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ds_evt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ds_evt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ds_evt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_188_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ds_evt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dsjinc_evt_dict_188_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ds_evt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ds_evt(*(ds_evt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ds_evt G__Tds_evt;
static int G__dsjinc_evt_dict_188_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ds_evt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ds_evt*) (soff+(sizeof(ds_evt)*i)))->~G__Tds_evt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ds_evt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ds_evt*) (soff))->~G__Tds_evt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dsjinc_evt_dict_188_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ds_evt* dest = (ds_evt*) G__getstructoffset();
   *dest = *(ds_evt*) libp->para[0].ref;
   const ds_evt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ds_mcevt */
static int G__dsjinc_evt_dict_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ds_mcevt* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ds_mcevt[n];
     } else {
       p = new((void*) gvp) ds_mcevt[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ds_mcevt;
     } else {
       p = new((void*) gvp) ds_mcevt;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ds_mcevt*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ds_mcevt*) G__getstructoffset())->Sig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ds_mcevt*) G__getstructoffset())->Cmb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ds_mcevt*) G__getstructoffset())->Bkg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ds_mcevt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ds_mcevt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ds_mcevt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ds_mcevt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ds_mcevt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ds_mcevt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ds_mcevt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ds_mcevt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dsjinc_evt_dict_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ds_mcevt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dsjinc_evt_dict_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ds_mcevt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ds_mcevt(*(ds_mcevt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ds_mcevt G__Tds_mcevt;
static int G__dsjinc_evt_dict_189_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ds_mcevt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ds_mcevt*) (soff+(sizeof(ds_mcevt)*i)))->~G__Tds_mcevt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ds_mcevt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ds_mcevt*) (soff))->~G__Tds_mcevt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dsjinc_evt_dict_189_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ds_mcevt* dest = (ds_mcevt*) G__getstructoffset();
   *dest = *(ds_mcevt*) libp->para[0].ref;
   const ds_mcevt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* dsjinc_evt */

/* dsjinc_mcevt */

/* ds_evt */

/* ds_mcevt */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdsjinc_evt_dict {
 public:
  G__Sizep2memfuncdsjinc_evt_dict(): p(&G__Sizep2memfuncdsjinc_evt_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdsjinc_evt_dict::*p)();
};

size_t G__get_sizep2memfuncdsjinc_evt_dict()
{
  G__Sizep2memfuncdsjinc_evt_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedsjinc_evt_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt))) {
     dsjinc_evt *G__Lderived;
     G__Lderived=(dsjinc_evt*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt),G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt))) {
     dsjinc_mcevt *G__Lderived;
     G__Lderived=(dsjinc_mcevt*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt),G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt))) {
     ds_evt *G__Lderived;
     G__Lderived=(ds_evt*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt),G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt))) {
     ds_mcevt *G__Lderived;
     G__Lderived=(ds_mcevt*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt),G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledsjinc_evt_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* dsjinc_evt */
static void G__setup_memvardsjinc_evt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt));
   { dsjinc_evt *p; p=(dsjinc_evt*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->info)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_EvtInfo),-1,-1,1,"info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mode_ds)-(long)(p)),105,0,0,-1,-1,-1,1,"mode_ds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mode)-(long)(p)),105,0,0,-1,-1,-1,1,"mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flv)-(long)(p)),105,0,0,-1,-1,-1,1,"flv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mds)-(long)(p)),100,0,0,-1,-1,-1,1,"mds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dmdsst)-(long)(p)),100,0,0,-1,-1,-1,1,"dmdsst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mvec)-(long)(p)),100,0,0,-1,-1,-1,1,"mvec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cos_hel_dsj)-(long)(p)),100,0,0,-1,-1,-1,1,"cos_hel_dsj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cos_hel_vec)-(long)(p)),100,0,0,-1,-1,-1,1,"cos_hel_vec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gam_dsj)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GammaInfo),-1,-1,1,"gam_dsj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gam_dsst)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GammaInfo),-1,-1,1,"gam_dsst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pi0_dsj)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_Pi0Info),-1,-1,1,"pi0_dsj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pi_dst)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TrackInfo),-1,-1,1,"pi_dst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pip_dsj)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TrackInfo),-1,-1,1,"pip_dsj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pim_dsj)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TrackInfo),-1,-1,1,"pim_dsj=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dsjinc_mcevt */
static void G__setup_memvardsjinc_mcevt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt));
   { dsjinc_mcevt *p; p=(dsjinc_mcevt*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->dsj_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"dsj_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ds_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"ds_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gam_dsst_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"gam_dsst_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gam_dsj_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"gam_dsj_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pi0_dsj_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"pi0_dsj_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pip_dsj_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"pip_dsj_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pim_dsj_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"pim_dsj_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_ds_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"h_ds_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ks_ds_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"ks_ds_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h1_vec_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"h1_vec_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2_vec_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"h2_vec_gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ds_evt */
static void G__setup_memvards_evt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt));
   { ds_evt *p; p=(ds_evt*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->info)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_EvtInfo),-1,-1,1,"info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mode)-(long)(p)),105,0,0,-1,-1,-1,1,"mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flv)-(long)(p)),105,0,0,-1,-1,-1,1,"flv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m)-(long)(p)),100,0,0,-1,-1,-1,1,"m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mvec)-(long)(p)),100,0,0,-1,-1,-1,1,"mvec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pvec)-(long)(p)),100,0,0,-1,-1,-1,1,"pvec[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cos_hel_vec)-(long)(p)),100,0,0,-1,-1,-1,1,"cos_hel_vec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_ds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TrackInfo),-1,-1,1,"h_ds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ks_ds)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_Ks0Info),-1,-1,1,"ks_ds=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h1_vec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TrackInfo),-1,-1,1,"h1_vec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2_vec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TrackInfo),-1,-1,1,"h2_vec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ipbst)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_IPBoost),-1,-1,1,"ipbst=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ds_mcevt */
static void G__setup_memvards_mcevt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt));
   { ds_mcevt *p; p=(ds_mcevt*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->genhep)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenHepEvt),-1,-1,1,"genhep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ds_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"ds_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_ds_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"h_ds_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ks_ds_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"ks_ds_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h1_vec_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"h1_vec_gen=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2_vec_gen)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_GenParticleInfo),-1,-1,1,"h2_vec_gen=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardsjinc_evt_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdsjinc_evt(void) {
   /* dsjinc_evt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt));
   G__memfunc_setup("dsjinc_evt",1065,G__dsjinc_evt_dict_186_0_1, 105, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__dsjinc_evt_dict_186_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DsstFl",592,G__dsjinc_evt_dict_186_0_3, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DsjPi0Fl",700,G__dsjinc_evt_dict_186_0_4, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DsjGammaFl",950,G__dsjinc_evt_dict_186_0_5, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dsjinc_evt_dict_186_0_6, 85, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dsjinc_evt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dsjinc_evt_dict_186_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dsjinc_evt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dsjinc_evt_dict_186_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dsjinc_evt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dsjinc_evt_dict_186_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dsjinc_evt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dsjinc_evt_dict_186_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dsjinc_evt_dict_186_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dsjinc_evt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dsjinc_evt_dict_186_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dsjinc_evt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dsjinc_evt_dict_186_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dsjinc_evt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dsjinc_evt_dict_186_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dsjinc_evt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("dsjinc_evt", 1065, G__dsjinc_evt_dict_186_0_18, (int) ('i'), G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt), -1, 0, 1, 1, 1, 0, "u 'dsjinc_evt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~dsjinc_evt", 1191, G__dsjinc_evt_dict_186_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dsjinc_evt_dict_186_0_20, (int) ('u'), G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_evt), -1, 1, 1, 1, 1, 0, "u 'dsjinc_evt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdsjinc_mcevt(void) {
   /* dsjinc_mcevt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt));
   G__memfunc_setup("dsjinc_mcevt",1273,G__dsjinc_evt_dict_187_0_1, 105, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__dsjinc_evt_dict_187_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sig",291,G__dsjinc_evt_dict_187_0_3, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cmb",274,G__dsjinc_evt_dict_187_0_4, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bkg",276,G__dsjinc_evt_dict_187_0_5, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dsjinc_evt_dict_187_0_6, 85, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dsjinc_mcevt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dsjinc_evt_dict_187_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dsjinc_mcevt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dsjinc_evt_dict_187_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dsjinc_mcevt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dsjinc_evt_dict_187_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dsjinc_mcevt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dsjinc_evt_dict_187_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dsjinc_evt_dict_187_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dsjinc_mcevt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dsjinc_evt_dict_187_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dsjinc_mcevt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dsjinc_evt_dict_187_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dsjinc_mcevt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dsjinc_evt_dict_187_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dsjinc_mcevt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("dsjinc_mcevt", 1273, G__dsjinc_evt_dict_187_0_18, (int) ('i'), G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt), -1, 0, 1, 1, 1, 0, "u 'dsjinc_mcevt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~dsjinc_mcevt", 1399, G__dsjinc_evt_dict_187_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dsjinc_evt_dict_187_0_20, (int) ('u'), G__get_linked_tagnum(&G__dsjinc_evt_dictLN_dsjinc_mcevt), -1, 1, 1, 1, 1, 0, "u 'dsjinc_mcevt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncds_evt(void) {
   /* ds_evt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt));
   G__memfunc_setup("ds_evt",645,G__dsjinc_evt_dict_188_0_1, 105, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__dsjinc_evt_dict_188_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pvec",398,G__dsjinc_evt_dict_188_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptvec",546,G__dsjinc_evt_dict_188_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("costhvec",863,G__dsjinc_evt_dict_188_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dsjinc_evt_dict_188_0_6, 85, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ds_evt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dsjinc_evt_dict_188_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ds_evt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dsjinc_evt_dict_188_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ds_evt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dsjinc_evt_dict_188_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ds_evt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dsjinc_evt_dict_188_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dsjinc_evt_dict_188_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ds_evt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dsjinc_evt_dict_188_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ds_evt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dsjinc_evt_dict_188_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ds_evt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dsjinc_evt_dict_188_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ds_evt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ds_evt", 645, G__dsjinc_evt_dict_188_0_18, (int) ('i'), G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt), -1, 0, 1, 1, 1, 0, "u 'ds_evt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ds_evt", 771, G__dsjinc_evt_dict_188_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dsjinc_evt_dict_188_0_20, (int) ('u'), G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_evt), -1, 1, 1, 1, 1, 0, "u 'ds_evt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncds_mcevt(void) {
   /* ds_mcevt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt));
   G__memfunc_setup("ds_mcevt",853,G__dsjinc_evt_dict_189_0_1, 105, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__dsjinc_evt_dict_189_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sig",291,G__dsjinc_evt_dict_189_0_3, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cmb",274,G__dsjinc_evt_dict_189_0_4, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bkg",276,G__dsjinc_evt_dict_189_0_5, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__dsjinc_evt_dict_189_0_6, 85, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ds_mcevt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__dsjinc_evt_dict_189_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ds_mcevt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__dsjinc_evt_dict_189_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ds_mcevt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__dsjinc_evt_dict_189_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ds_mcevt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__dsjinc_evt_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__dsjinc_evt_dict_189_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__dsjinc_evt_dict_189_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ds_mcevt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__dsjinc_evt_dict_189_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ds_mcevt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__dsjinc_evt_dict_189_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ds_mcevt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__dsjinc_evt_dict_189_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ds_mcevt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ds_mcevt", 853, G__dsjinc_evt_dict_189_0_18, (int) ('i'), G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt), -1, 0, 1, 1, 1, 0, "u 'ds_mcevt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ds_mcevt", 979, G__dsjinc_evt_dict_189_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dsjinc_evt_dict_189_0_20, (int) ('u'), G__get_linked_tagnum(&G__dsjinc_evt_dictLN_ds_mcevt), -1, 1, 1, 1, 1, 0, "u 'ds_mcevt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdsjinc_evt_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldsjinc_evt_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdsjinc_evt_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dsjinc_evt_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_EvtInfo = { "EvtInfo" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_GammaInfo = { "GammaInfo" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_GenHepEvt = { "GenHepEvt" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_GenParticleInfo = { "GenParticleInfo" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_IPBoost = { "IPBoost" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_Ks0Info = { "Ks0Info" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_Pi0Info = { "Pi0Info" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_TrackInfo = { "TrackInfo" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_dsjinc_evt = { "dsjinc_evt" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_dsjinc_mcevt = { "dsjinc_mcevt" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_ds_evt = { "ds_evt" , 99 , -1 };
G__linked_taginfo G__dsjinc_evt_dictLN_ds_mcevt = { "ds_mcevt" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledsjinc_evt_dict() {
  G__dsjinc_evt_dictLN_TClass.tagnum = -1 ;
  G__dsjinc_evt_dictLN_TBuffer.tagnum = -1 ;
  G__dsjinc_evt_dictLN_TMemberInspector.tagnum = -1 ;
  G__dsjinc_evt_dictLN_TObject.tagnum = -1 ;
  G__dsjinc_evt_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dsjinc_evt_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dsjinc_evt_dictLN_EvtInfo.tagnum = -1 ;
  G__dsjinc_evt_dictLN_GammaInfo.tagnum = -1 ;
  G__dsjinc_evt_dictLN_GenHepEvt.tagnum = -1 ;
  G__dsjinc_evt_dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dsjinc_evt_dictLN_GenParticleInfo.tagnum = -1 ;
  G__dsjinc_evt_dictLN_IPBoost.tagnum = -1 ;
  G__dsjinc_evt_dictLN_Ks0Info.tagnum = -1 ;
  G__dsjinc_evt_dictLN_Pi0Info.tagnum = -1 ;
  G__dsjinc_evt_dictLN_TrackInfo.tagnum = -1 ;
  G__dsjinc_evt_dictLN_dsjinc_evt.tagnum = -1 ;
  G__dsjinc_evt_dictLN_dsjinc_mcevt.tagnum = -1 ;
  G__dsjinc_evt_dictLN_ds_evt.tagnum = -1 ;
  G__dsjinc_evt_dictLN_ds_mcevt.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledsjinc_evt_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_EvtInfo);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_GammaInfo);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_GenHepEvt);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_GenParticleInfo);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_IPBoost);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_Ks0Info);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_Pi0Info);
   G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_TrackInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_dsjinc_evt),sizeof(dsjinc_evt),-1,28928,(char*)NULL,G__setup_memvardsjinc_evt,G__setup_memfuncdsjinc_evt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_dsjinc_mcevt),sizeof(dsjinc_mcevt),-1,28928,(char*)NULL,G__setup_memvardsjinc_mcevt,G__setup_memfuncdsjinc_mcevt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_ds_evt),sizeof(ds_evt),-1,28928,(char*)NULL,G__setup_memvards_evt,G__setup_memfuncds_evt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dsjinc_evt_dictLN_ds_mcevt),sizeof(ds_mcevt),-1,28928,(char*)NULL,G__setup_memvards_mcevt,G__setup_memfuncds_mcevt);
}
extern "C" void G__cpp_setupdsjinc_evt_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdsjinc_evt_dict()");
  G__set_cpp_environmentdsjinc_evt_dict();
  G__cpp_setup_tagtabledsjinc_evt_dict();

  G__cpp_setup_inheritancedsjinc_evt_dict();

  G__cpp_setup_typetabledsjinc_evt_dict();

  G__cpp_setup_memvardsjinc_evt_dict();

  G__cpp_setup_memfuncdsjinc_evt_dict();
  G__cpp_setup_globaldsjinc_evt_dict();
  G__cpp_setup_funcdsjinc_evt_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdsjinc_evt_dict();
  return;
}
class G__cpp_setup_initdsjinc_evt_dict {
  public:
    G__cpp_setup_initdsjinc_evt_dict() { G__add_setup_func("dsjinc_evt_dict",(G__incsetup)(&G__cpp_setupdsjinc_evt_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdsjinc_evt_dict() { G__remove_setup_func("dsjinc_evt_dict"); }
};
G__cpp_setup_initdsjinc_evt_dict G__cpp_setup_initializerdsjinc_evt_dict;

